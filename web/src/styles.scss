// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$movies-ngrx-primary: mat.define-palette(mat.$indigo-palette);
$movies-ngrx-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$movies-ngrx-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$movies-ngrx-theme: mat.define-light-theme((
    color: (
        primary: $movies-ngrx-primary,
        accent: $movies-ngrx-accent,
        warn: $movies-ngrx-warn,
    )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($movies-ngrx-theme);

@include mat.core-theme($movies-ngrx-theme);

/* You can add global styles to this file, and also import other style files */

/*Breakpoint Variables*/

/**/

:root {
    --color-primary: #E50914;
}

/*Resets*/
* {
    margin: 0;
    padding: 0;
}

*,
*::after,
*::before {
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; //16px -> 10px. Nice round number to work with.
}

body {
    margin: 0;
    min-height: 100vh;
    max-height: 100vh;
    font-family: Arial, sans-serif;
}

html, body {
    height: 100%;
}
